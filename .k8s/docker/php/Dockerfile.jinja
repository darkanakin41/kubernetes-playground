# Pull base image.
FROM php:7.3-fpm

COPY ./config/php/php.ini /usr/local/etc/php/
COPY ./config/php-fpm/www.conf /usr/local/etc/php-fpm.d/www.conf

RUN apt-get clean && apt-get update && apt-get install --fix-missing -y \
    wget \
    apt-transport-https \
    lsb-release \
    ca-certificates \
    gnupg2 && rm -rf /var/lib/apt/lists/*

RUN echo "deb http://packages.dotdeb.org jessie all" >> /etc/apt/sources.list \
    && echo "deb-src http://packages.dotdeb.org jessie all" >> /etc/apt/sources.list \
    && cd /tmp && wget https://www.dotdeb.org/dotdeb.gpg && apt-key add dotdeb.gpg \
    && wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg \
    && echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" > /etc/apt/sources.list.d/php.list

# Installation of needed extensions.
RUN apt-get update && apt-get install --fix-missing -y \
    ruby-dev \
    rubygems \
    imagemagick \
    graphviz \
    sudo \
    libpng-dev \
    libjpeg62-turbo-dev \
    libmcrypt-dev \
    libxml2-dev \
    libxslt1-dev \
    mariadb-client \
    linux-libc-dev \
    libyaml-dev \
    zlib1g-dev \
    libicu-dev \
    libpq-dev \
    libldap2-dev \
    libssl-dev \
    libzip-dev \
    git \
    libonig-dev \
    && rm -rf /var/lib/apt/lists/*

RUN docker-php-ext-install \
    mbstring \
    zip \
    soap \
    pdo_mysql \
    mysqli \
    opcache \
    calendar \
    intl \
    exif \
    ftp \
    bcmath \
    ldap

RUN apt-get update -y \
    && apt-get install -y libwebp-dev libjpeg62-turbo-dev libpng-dev libxpm-dev libfreetype6-dev \
    && docker-php-ext-configure gd --with-gd --with-webp-dir --with-jpeg-dir \
    --with-png-dir --with-zlib-dir --with-xpm-dir --with-freetype-dir \
    && docker-php-ext-install gd

# Installation of pecl packages
RUN pecl install mcrypt-1.0.3 redis yaml-2.0.4 apcu-5.1.18 && \
    docker-php-ext-enable mcrypt redis apcu && \
    echo "extension=yaml.so" > /usr/local/etc/php/conf.d/ext-yaml.ini

# Installation of Composer
RUN cd /usr/src && curl -sS http://getcomposer.org/installer | php
RUN cd /usr/src && mv composer.phar /usr/bin/composer

# Installation of drush 8 & 9
RUN git clone https://github.com/drush-ops/drush.git /usr/local/src/drush \
    && cp -r /usr/local/src/drush/ /usr/local/src/drush8/ \
    && cp -r /usr/local/src/drush/ /usr/local/src/drush9/ \
    && cd /usr/local/src/drush8 && git checkout -f 8.1.0 \
    && cd /usr/local/src/drush8 && composer update && composer install \
    && ln -s /usr/local/src/drush8/drush /usr/bin/drush8 \
    && cd /usr/local/src/drush9 && git checkout 9.1.0 \
    && cd /usr/local/src/drush9 && composer update && composer install \
    && ln -s /usr/local/src/drush9/drush /usr/bin/drush9

# Give ownership of the /var/www/html to www-data users
RUN chown www-data:root /var/www -R

# Installation of OpCache
RUN ( \
    echo "opcache.memory_consumption=128"; \
    echo "opcache.interned_strings_buffer=8"; \
    echo "opcache.max_accelerated_files=12000"; \
    echo "opcache.revalidate_freq=2"; \
    echo "opcache.fast_shutdown=1"; \
    echo "opcache.enable_cli=1"; \
    ) > /usr/local/etc/php/conf.d/opcache-recommended.ini

# Set timezone to Europe/Paris
RUN echo "Europe/Paris" > /etc/timezone && dpkg-reconfigure -f noninteractive tzdata

VOLUME /var/www/html

EXPOSE 9000
CMD ["php-fpm"]

## Installation of needed extensions.
#RUN apt-get update && apt-get install --fix-missing -y \
#    htop
#    tree \
#    vim \
#    nano \
#    wget \
#    git \
#    npm \
#    bash-completion \
#    zip && rm -rf /var/lib/apt/lists/*
#
## Install xdebug. We need at least 2.4 version to have PHP 7 support.
#RUN cd /tmp/ && wget http://xdebug.org/files/xdebug-2.6.0RC2.tgz && tar -xvzf
#    xdebug-2.6.0RC2.tgz && cd xdebug-2.6.0RC2/ && phpize && ./configure --enable-xdebug
#    --with-php-config=/usr/local/bin/php-config && make && make install
#
#RUN cd /tmp/xdebug-2.6.0RC2 && cp modules/xdebug.so
#    /usr/local/lib/php/extensions/no-debug-non-zts-20170718/
#
#RUN echo 'zend_extension =
#    /usr/local/lib/php/extensions/no-debug-non-zts-20170718/xdebug.so' >>
#    /usr/local/etc/php/php.ini
#
#RUN touch /usr/local/etc/php/conf.d/xdebug.ini &&\
#    echo xdebug.remote_enable=1 >> /usr/local/etc/php/conf.d/xdebug.ini &&\
#    echo xdebug.remote_autostart=0 >> /usr/local/etc/php/conf.d/xdebug.ini &&\
#    echo xdebug.remote_connect_back=1 >> /usr/local/etc/php/conf.d/xdebug.ini &&\
#    echo xdebug.remote_port=9000 >> /usr/local/etc/php/conf.d/xdebug.ini &&\
#    echo xdebug.remote_log=/tmp/php5-xdebug.log >> /usr/local/etc/php/conf.d/xdebug.ini